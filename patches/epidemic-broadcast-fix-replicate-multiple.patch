--- node_modules/epidemic-broadcast-trees/events.js~
+++ node_modules/epidemic-broadcast-trees/events.js
@@ -383,7 +383,8 @@ exports.notes = function (state, ev) {
       //in the case we are already ahead, get ready to send them messages.
       rep.sent = seq
       if(lseq > seq) {
-        if(tx) peer.retrive.push(id)
+        // we can only send our own logs because we don't have full logs
+        if(tx && id == SSB.net.id) peer.retrive.push(id)
         else if(isReplicate) setNotes(peer, id, lseq, rep.rx)
       }
     }
--- node_modules/epidemic-broadcast-trees/stream.js~
+++ node_modules/epidemic-broadcast-trees/stream.js
@@ -110,8 +110,22 @@ EBTStream.prototype.resume = function () {
         notes = _notes
       }
 
-      if(this.peer.logging) console.error("EBT:send", notes)
-      this.sink.write(notes)
+      var self = this
+
+      // hacky
+      SSB.db.last.get(function (err, h) {
+        // because we don't store full logs, we can't offer new messages other than our own
+        var theirClock = state.clock
+        var ourClock = self.peer.state.clock
+        for (var id in ourClock) {
+          if (h[id].partial && ourClock[id] > theirClock[id]) {
+            delete notes[id]
+          }
+        }
+
+        if(self.peer.logging) console.error("EBT:send 2", prettyPrintLogging(notes), null, 2)
+        self.sink.write(notes)
+      })
     }
   }
 }
